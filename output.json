{
  "swagger": "2.0",
  "info": {
    "version": "0.18.0",
    "title": "Amadeus QuickConnect",
    "x-tags": [
      "#online-retail",
      "#mobile-services",
      "#ama-for-dev"
    ],
    "x-status": "validated",
    "x-release-note": {
      "0.18.0": [
        "Add the cabin bags informations in the Flight-offer search response",
        "Add Amenities details in the Flight-offer search response"
      ],
      "0.17.1": [
        "Change description in lastTicketingDate and lastTicketingDateTime"
      ],
      "0.17.0": [
        "Add lastTicketingDateTime attribute in the Flight-Offer"
      ],
      "0.16.0": [
        "Add Non-stop preferred option"
      ],
      "0.15.0": [
        "Add new source \"NDC\""
      ],
      "0.14.0": [
        "Add Margins and Discounts content from Margin Manager product"
      ],
      "0.13.0": [
        "Add Expanded parameters criterias in flight-offers search"
      ],
      "0.12.0": [
        "Add new sources \"LTC\" and \"EAC\""
      ],
      "0.11.0": [
        "Add maxPrice filtering",
        "Add retrieve flight-order by record locator",
        "Add ownerOfficeId in flight-order"
      ],
      "0.10.0": [
        "Add traveler in pricing input"
      ],
      "0.9.0": [
        "Add currencies, aircraft and carriers dictionary"
      ],
      "0.8.0": [
        "Add Patch flight-order"
      ],
      "0.7.0": [
        "Add cancel flight-order"
      ],
      "0.6.0": [
        "Add retrieve flight-order"
      ],
      "0.5.0": [
        "Add flight-order create"
      ],
      "0.4.0": [
        "Add service catalogue into pricing flight offer reply"
      ],
      "0.3.0": [
        "Add search flight-offer with GET operation"
      ],
      "0.2.0": [
        "Add pricing flight-offer"
      ],
      "0.1.0": [
        "Search flight-offer using POST"
      ]
    },
    "description": "TO-DO: put high-level description of the API + List the limitations and pre-requisites, ..."
  },
  "host": "test.travel.api.amadeus.com",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/vnd.amadeus+json"
  ],
  "produces": [
    "application/vnd.amadeus+json"
  ],
  "paths": {
    "/shopping/flight-offers": {
      "post": {
        "tags": [
          "Shopping"
        ],
        "operationId": "searchFlightOffers",
        "summary": "Return list of Flight Offers based on posted searching criteria.",
        "parameters": [
          {
            "$ref": "#/parameters/FOSE_getOverride_Input"
          },
          {
            "name": "getFlightOffersBody",
            "description": "list of criteria to retrieve a list of flight offers",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FOSE_GetFlightOffersQuery_Input"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/FOSE_returnAirOffers"
          },
          "400": {
            "$ref": "#/responses/FOSE_400_Search"
          },
          "default": {
            "$ref": "#/responses/FOSE_500"
          }
        },
        "description": "This operation aims at dynamically returning the lowest available fares by providing flight combinations matching the requested route and travel dates.\nThe search engine collects, filters, ranks and standardizes the flight offers coming from the providers.\n\nThe customer can retrieve up to 250 recommendations among the cheapest fares available in the providers’ system.\nThe customer can also compare different types of fares on a given route in one single call.\n\nThe operation also offers several options to customize the search in order to find and return the relevant flight offer depending on the customer’s need. Some of these parameters can be set by default and when the context is specific, they can also be overridden dynamically by adapting the request.\n\n### Query example\n<pre><code>\n{\n  \"currencyCode\": \"USD\",\n  \"originDestinations\": [\n    {\n      \"id\": \"1\",\n      \"originLocationCode\": \"RIO\",\n      \"destinationLocationCode\": \"MAD\",\n      \"departureDateTimeRange\": {\n        \"date\": \"2020-03-01\",\n        \"time\": \"10:00:00\"\n      }\n    },\n    {\n      \"id\": \"2\",\n      \"originLocationCode\": \"MAD\",\n      \"destinationLocationCode\": \"RIO\",\n      \"departureDateTimeRange\": {\n        \"date\": \"2020-03-05\",\n        \"time\": \"17:00:00\"\n      }\n    }\n  ],\n  \"travelers\": [\n    {\n      \"id\": \"1\",\n      \"travelerType\": \"ADULT\",\n      \"fareOptions\": [\n        \"STANDARD\"\n      ]\n    },\n    {\n      \"id\": \"2\",\n      \"travelerType\": \"CHILD\",\n      \"fareOptions\": [\n        \"STANDARD\"\n      ]\n    }\n  ],\n  \"sources\": [\n    \"GDS\"\n  ],\n  \"searchCriteria\": {\n    \"maxFlightOffers\": 50,\n    \"flightFilters\": {\n      \"cabinRestrictions\": [\n        {\n          \"cabin\": \"BUSINESS\",\n          \"coverage\": \"MOST_SEGMENTS\",\n          \"originDestinationIds\": [\n            \"1\"\n          ]\n        }\n      ],\n      \"carrierRestrictions\": {\n        \"excludedCarrierCodes\": [\n          \"AA\",\n          \"TP\",\n          \"AZ\"\n        ]\n      }\n    }\n  }\n}\n</code></pre>\n\n### Response example\n<pre><code>\n{\n  \"meta\": {\n    \"count\": 50\n  },\n  \"data\": [\n    {\n      \"type\": \"flight-offer\",\n      \"id\": \"1\",\n      \"source\": \"GDS\",\n      \"instantTicketingRequired\": false,\n      \"nonHomogeneous\": false,\n      \"oneWay\": false,\n      \"lastTicketingDate\": \"2020-03-01\",\n      \"numberOfBookableSeats\": 9,\n      \"itineraries\": [\n        {\n          \"duration\": \"PT18H30M\",\n          \"segments\": [\n            {\n              \"departure\": {\n                \"iataCode\": \"GIG\",\n                \"terminal\": \"2\",\n                \"at\": \"2020-03-01T21:05:00\"\n              },\n              \"arrival\": {\n                \"iataCode\": \"CDG\",\n                \"terminal\": \"2E\",\n                \"at\": \"2020-03-02T12:20:00\"\n              },\n              \"carrierCode\": \"KL\",\n              \"number\": \"2410\",\n              \"aircraft\": {\n                \"code\": \"772\"\n              },\n              \"operating\": {\n                \"carrierCode\": \"AF\"\n              },\n              \"id\": \"40\",\n              \"numberOfStops\": 0,\n              \"blacklistedInEU\": false\n            },\n            {\n              \"departure\": {\n                \"iataCode\": \"CDG\",\n                \"terminal\": \"2F\",\n                \"at\": \"2020-03-02T14:30:00\"\n              },\n              \"arrival\": {\n                \"iataCode\": \"AMS\",\n                \"at\": \"2020-03-02T15:45:00\"\n              },\n              \"carrierCode\": \"KL\",\n              \"number\": \"1234\",\n              \"aircraft\": {\n                \"code\": \"73H\"\n              },\n              \"operating\": {\n                \"carrierCode\": \"KL\"\n              },\n              \"id\": \"41\",\n              \"numberOfStops\": 0,\n              \"blacklistedInEU\": false\n            },\n            {\n              \"departure\": {\n                \"iataCode\": \"AMS\",\n                \"at\": \"2020-03-02T17:05:00\"\n              },\n              \"arrival\": {\n                \"iataCode\": \"MAD\",\n                \"terminal\": \"2\",\n                \"at\": \"2020-03-02T19:35:00\"\n              },\n              \"carrierCode\": \"KL\",\n              \"number\": \"1705\",\n              \"aircraft\": {\n                \"code\": \"73J\"\n              },\n              \"operating\": {\n                \"carrierCode\": \"KL\"\n              },\n              \"id\": \"42\",\n              \"numberOfStops\": 0,\n              \"blacklistedInEU\": false\n            }\n          ]\n        },\n        {\n          \"duration\": \"PT26H10M\",\n          \"segments\": [\n            {\n              \"departure\": {\n                \"iataCode\": \"MAD\",\n                \"terminal\": \"2\",\n                \"at\": \"2020-03-05T20:25:00\"\n              },\n              \"arrival\": {\n                \"iataCode\": \"AMS\",\n                \"at\": \"2020-03-05T23:00:00\"\n              },\n              \"carrierCode\": \"KL\",\n              \"number\": \"1706\",\n              \"aircraft\": {\n                \"code\": \"73J\"\n              },\n              \"operating\": {\n                \"carrierCode\": \"KL\"\n              },\n              \"id\": \"81\",\n              \"numberOfStops\": 0,\n              \"blacklistedInEU\": false\n            },\n            {\n              \"departure\": {\n                \"iataCode\": \"AMS\",\n                \"at\": \"2020-03-06T10:40:00\"\n              },\n              \"arrival\": {\n                \"iataCode\": \"GIG\",\n                \"terminal\": \"2\",\n                \"at\": \"2020-03-06T18:35:00\"\n              },\n              \"carrierCode\": \"KL\",\n              \"number\": \"705\",\n              \"aircraft\": {\n                \"code\": \"772\"\n              },\n              \"operating\": {\n                \"carrierCode\": \"KL\"\n              },\n              \"id\": \"82\",\n              \"numberOfStops\": 0,\n              \"blacklistedInEU\": false\n            }\n          ]\n        }\n      ],\n      \"price\": {\n        \"currency\": \"USD\",\n        \"grandTotal\": \"8514.04\",\n        \"total\": \"8514.04\",\n        \"base\": \"8314.00\",\n        \"fees\": [\n          {\n            \"amount\": \"0.00\",\n            \"type\": \"SUPPLIER\"\n          },\n          {\n            \"amount\": \"0.00\",\n            \"type\": \"TICKETING\"\n          }\n        ]\n      },\n      \"pricingOptions\": {\n        \"fareType\": [\n          \"PUBLISHED\"\n        ],\n        \"includedCheckedBagsOnly\": true\n      },\n      \"validatingAirlineCodes\": [\n        \"AF\"\n      ],\n      \"travelerPricings\": [\n        {\n          \"travelerId\": \"1\",\n          \"fareOption\": \"STANDARD\",\n          \"travelerType\": \"ADULT\",\n          \"price\": {\n            \"currency\": \"USD\",\n            \"total\": \"4849.02\",\n            \"base\": \"4749.00\"\n          },\n          \"fareDetailsBySegment\": [\n            {\n              \"segmentId\": \"40\",\n              \"cabin\": \"BUSINESS\",\n              \"fareBasis\": \"CFFBR\",\n              \"class\": \"C\",\n              \"includedCheckedBags\": {\n                \"quantity\": 2\n              }\n            },\n            {\n              \"segmentId\": \"41\",\n              \"cabin\": \"BUSINESS\",\n              \"fareBasis\": \"CFFBR\",\n              \"class\": \"J\",\n              \"includedCheckedBags\": {\n                \"quantity\": 2\n              }\n            },\n            {\n              \"segmentId\": \"42\",\n              \"cabin\": \"BUSINESS\",\n              \"fareBasis\": \"CFFBR\",\n              \"class\": \"J\",\n              \"includedCheckedBags\": {\n                \"quantity\": 2\n              }\n            },\n            {\n              \"segmentId\": \"81\",\n              \"cabin\": \"ECONOMY\",\n              \"fareBasis\": \"YFFBR\",\n              \"class\": \"Y\",\n              \"includedCheckedBags\": {\n                \"quantity\": 1\n              }\n            },\n            {\n              \"segmentId\": \"82\",\n              \"cabin\": \"ECONOMY\",\n              \"fareBasis\": \"YFFBR\",\n              \"class\": \"Y\",\n              \"includedCheckedBags\": {\n                \"quantity\": 1\n              }\n            }\n          ]\n        },\n        {\n          \"travelerId\": \"2\",\n          \"fareOption\": \"STANDARD\",\n          \"travelerType\": \"CHILD\",\n          \"price\": {\n            \"currency\": \"USD\",\n            \"total\": \"3665.02\",\n            \"base\": \"3565.00\"\n          },\n          \"fareDetailsBySegment\": [\n            {\n              \"segmentId\": \"40\",\n              \"cabin\": \"BUSINESS\",\n              \"fareBasis\": \"CFFBR\",\n              \"class\": \"C\"\n            },\n            {\n              \"segmentId\": \"41\",\n              \"cabin\": \"BUSINESS\",\n              \"fareBasis\": \"CFFBR\",\n              \"class\": \"J\"\n            },\n            {\n              \"segmentId\": \"42\",\n              \"cabin\": \"BUSINESS\",\n              \"fareBasis\": \"CFFBR\",\n              \"class\": \"J\"\n            },\n            {\n              \"segmentId\": \"81\",\n              \"cabin\": \"ECONOMY\",\n              \"fareBasis\": \"YFFBR\",\n              \"class\": \"Y\"\n            },\n            {\n              \"segmentId\": \"82\",\n              \"cabin\": \"ECONOMY\",\n              \"fareBasis\": \"YFFBR\",\n              \"class\": \"Y\"\n            }\n          ]\n        }\n      ]\n    },\n    ...\n  ],\n  \"dictionaries\": {\n    \"locations\": {\n      \"MAD\": {\n        \"cityCode\": \"MAD\",\n        \"countryCode\": \"ES\"\n      },\n      \"GIG\": {\n        \"cityCode\": \"RIO\",\n        \"countryCode\": \"BR\"\n      },\n      \"CDG\": {\n        \"cityCode\": \"PAR\",\n        \"countryCode\": \"FR\"\n      },\n      \"AMS\": {\n        \"cityCode\": \"AMS\",\n        \"countryCode\": \"NL\"\n      }\n    },\n    \"aircraft\": {\n      \"772\": \"BOEING 777-200/200ER\"\n      \"73H\": \"BOEING 737-800 (WINGLETS)\"\n      \"73J\": \"BOEING 737-900\"\n    },\n    \"currencies\": {\n      \"USD\": \"US DOLLAR\"\n    },\n    \"carriers\" : {\n      \"KL\": \"KLM ROYAL DUTCH AIRLINES\"\n      \"AF\": \"AIR FRANCE\"\n    }\n  }\n}\n</code></pre>\n"
      },
      "get": {
        "tags": [
          "Shopping"
        ],
        "operationId": "getFlightOffers",
        "summary": "Return list of Flight Offers based on searching criteria.",
        "parameters": [
          {
            "name": "originLocationCode",
            "in": "query",
            "description": "city/airport [IATA code](http://www.iata.org/publications/Pages/code-search.aspx) from which the traveler will depart, e.g. BOS for Boston",
            "required": true,
            "type": "string",
            "pattern": "[A-Z]{3}"
          },
          {
            "name": "destinationLocationCode",
            "in": "query",
            "description": "city/airport [IATA code](http://www.iata.org/publications/Pages/code-search.aspx) to which the traveler is going, e.g. PAR for Paris",
            "required": true,
            "type": "string",
            "pattern": "[A-Z]{3}"
          },
          {
            "name": "departureDate",
            "in": "query",
            "description": "the date on which the traveler will depart from the origin to go to the destination. Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2017-12-25",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "returnDate",
            "in": "query",
            "description": "the date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, only one-way itineraries are found. If this parameter is specified, only round-trip itineraries are found. Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2018-02-28",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "adults",
            "in": "query",
            "description": "the number of adult travelers (age 12 or older on date of departure).",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "maximum": 9,
            "default": 1
          },
          {
            "name": "children",
            "in": "query",
            "description": "the number of child travelers (older than age 2 and younger than age 12 on date of departure) who will each have their own separate seat. If specified, this number should be greater than or equal to 0",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "maximum": 9
          },
          {
            "name": "infants",
            "in": "query",
            "description": "the number of infant travelers (whose age is less or equal to 2 on date of departure). Infants travel on the lap of an adult traveler, and thus the number of infants must not exceed the number of adults. If specified, this number should be greater than or equal to 0",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "maximum": 9
          },
          {
            "name": "travelClass",
            "in": "query",
            "description": "most of the flight time should be spent in a cabin of this quality or higher. The accepted travel class is economy, premium economy, business or first class. If no travel class is specified, the search considers any travel class",
            "required": false,
            "type": "string",
            "enum": [
              "ECONOMY",
              "PREMIUM_ECONOMY",
              "BUSINESS",
              "FIRST"
            ]
          },
          {
            "name": "includedAirlineCodes",
            "in": "query",
            "description": "if specified, the flight offer will include at least one segment per bound marketed by one of these airlines. Airlines are specified as [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx) and are comma-separated, e.g. 6X,7X,8X",
            "required": false,
            "type": "string",
            "collectionFormat": "csv",
            "pattern": "[0-9A-Z]{2}"
          },
          {
            "name": "excludedAirlineCodes",
            "in": "query",
            "description": "if specified, the flight offer will exclude all the flights marketed by one of these airlines. Airlines are specified as [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx) and are comma-separated, e.g. 6X,7X,8X",
            "required": false,
            "type": "string",
            "collectionFormat": "csv",
            "pattern": "[0-9A-Z]{2}"
          },
          {
            "name": "nonStop",
            "in": "query",
            "description": "if set to true, the search will find only flights going from the origin to the destination with no stop in between",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "currencyCode",
            "in": "query",
            "description": "the preferred currency for the flight offers. Currency is specified in the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format, e.g. EUR for Euro",
            "required": false,
            "type": "string",
            "pattern": "[A-Z]{3}"
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "maximum price per traveler. By default, no limit is applied. If specified, the value should be a positive number with no decimals",
            "required": false,
            "type": "integer",
            "minimum": 1
          },
          {
            "name": "max",
            "in": "query",
            "description": "maximum number of flight offers to return. If specified, the value should be greater than or equal to 1",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "default": 250
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/FOGE_GETAirOffersReply"
          },
          "400": {
            "$ref": "#/responses/FOGE_400_Search"
          },
          "default": {
            "$ref": "#/responses/FOGE_500"
          }
        },
        "description": "Search for the best bookable flight offers from a very simple query where you can specify as little as the travel origin, the destination, the departure date and the number of adults.\n\n### Query example\n  <pre><code>\n  GET https://test.api.amadeus.com/v1/shopping/flight-offers?originLocationCode=SYD&destinationLocationCode=BKK&departureDate=2020-01-01&returnDate=2020-01-05&adults=2&currencyCode=AUD&includedAirlineCodes=TG&max=3\n  </code></pre>\n\n### Response example\n<pre><code>\n{\n  \"meta\": {\n    \"count\": 3,\n    \"links\": {\n      \"self\": \"https://test.api.amadeus.com/v1/shopping/flight-offers?originLocationCode=SYD&destinationLocationCode=BKK&departureDate=2020-01-01&returnDate=2020-01-05&adults=2&currencyCode=AUD&includedAirlineCodes=TG&max=3\"\n    }\n  },\n  \"data\": [\n    {\n      \"type\": \"flight-offer\",\n      \"id\": \"1\",\n      \"source\": \"GDS\",\n      \"instantTicketingRequired\": false,\n      \"nonHomogeneous\": false,\n      \"oneWay\": false,\n      \"lastTicketingDate\": \"2020-01-01\",\n      \"numberOfBookableSeats\": 4,\n      \"itineraries\": [\n        {\n          \"duration\": \"PT9H25M\",\n          \"segments\": [\n            {\n              \"departure\": {\n                \"iataCode\": \"SYD\",\n                \"terminal\": \"1\",\n                \"at\": \"2020-01-01T10:00:00\"\n              },\n              \"arrival\": {\n                \"iataCode\": \"BKK\",\n                \"at\": \"2020-01-01T15:25:00\"\n              },\n              \"carrierCode\": \"TG\",\n              \"number\": \"476\",\n              \"aircraft\": {\n                \"code\": \"747\"\n              },\n              \"operating\": {\n                \"carrierCode\": \"TG\"\n              },\n              \"id\": \"1\",\n              \"numberOfStops\": 0,\n              \"blacklistedInEU\": false\n            }\n          ]\n        },\n        {\n          \"duration\": \"PT9H20M\",\n          \"segments\": [\n            {\n              \"departure\": {\n                \"iataCode\": \"BKK\",\n                \"at\": \"2020-01-05T17:50:00\"\n              },\n              \"arrival\": {\n                \"iataCode\": \"SYD\",\n                \"terminal\": \"1\",\n                \"at\": \"2020-01-06T07:10:00\"\n              },\n              \"carrierCode\": \"TG\",\n              \"number\": \"475\",\n              \"aircraft\": {\n                \"code\": \"747\"\n              },\n              \"operating\": {\n                \"carrierCode\": \"TG\"\n              },\n              \"id\": \"2\",\n              \"numberOfStops\": 0,\n              \"blacklistedInEU\": false\n            }\n          ]\n        }\n      ],\n      \"price\": {\n        \"currency\": \"AUD\",\n        \"total\": \"1324.86\",\n        \"base\": \"1165.00\",\n        \"fees\": [\n          {\n            \"amount\": \"0.00\",\n            \"type\": \"SUPPLIER\"\n          },\n          {\n            \"amount\": \"0.00\",\n            \"type\": \"TICKETING\"\n          }\n        ]\n      },\n      \"pricingOptions\": {\n        \"fareType\": [\n          \"PUBLISHED\"\n        ],\n        \"includedCheckedBagsOnly\": true\n      },\n      \"validatingAirlineCodes\": [\n        \"TG\"\n      ],\n      \"travelerPricings\": [\n        {\n          \"travelerId\": \"1\",\n          \"fareOption\": \"STANDARD\",\n          \"travelerType\": \"ADULT\",\n          \"price\": {\n            \"currency\": \"AUD\",\n            \"total\": \"1324.86\",\n            \"base\": \"1165.00\"\n          },\n          \"fareDetailsBySegment\": [\n            {\n              \"segmentId\": \"1\",\n              \"cabin\": \"ECONOMY\",\n              \"fareBasis\": \"W1MRTG\",\n              \"class\": \"W\",\n              \"includedCheckedBags\": {\n                \"weight\": 20,\n                \"weightUnit\": \"KG\"\n              }\n            },\n            {\n              \"segmentId\": \"2\",\n              \"cabin\": \"ECONOMY\",\n              \"fareBasis\": \"W1MRTG\",\n              \"class\": \"W\",\n              \"includedCheckedBags\": {\n                \"weight\": 20,\n                \"weightUnit\": \"KG\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    ...\n  ],\n  \"dictionaries\": {\n    \"locations\": {\n      \"BKK\": {\n        \"cityCode\": \"BKK\",\n        \"countryCode\": \"TH\"\n      },\n      \"SYD\": {\n        \"cityCode\": \"SYD\",\n        \"countryCode\": \"AU\"\n      }\n    },\n    \"aircraft\":{\n      \"747\": \"BOEING 747 ALL SERIES PASSENGER\"\n    },\n    \"currencies\": {\n      \"EUR\": \"EURO\"\n    },\n    \"carriers\": {\n      \"TG\": \"THAI AIRWAYS INTERNATIONAL\"\n    }\n  }\n}\n</code></pre>\n"
      }
    }
  },
  "definitions": {
    "FOSE_Success": {
      "title": "Success",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_Issue"
          }
        },
        "meta": {
          "$ref": "#/definitions/FOSE_Collection_Meta_Link"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_FlightOffer"
          }
        },
        "dictionaries": {
          "$ref": "#/definitions/FOSE_Dictionaries"
        }
      },
      "example": {
        "meta": {
          "count": 1,
          "links": {
            "self": "https://test.api.amadeus.com/v1/shopping/flight-offers?originLocationCode=SYD&destinationLocationCode=BKK&departureDate=2020-01-01&returnDate=2020-01-05&adults=2&currencyCode=AUD&includedAirlineCodes=TG&max=1"
          }
        },
        "data": [
          {
            "type": "flight-offer",
            "id": "1",
            "source": "GDS",
            "instantTicketingRequired": false,
            "nonHomogeneous": false,
            "oneWay": false,
            "lastTicketingDate": "2020-01-01",
            "numberOfBookableSeats": 4,
            "itineraries": [
              {
                "duration": "PT9H25M",
                "segments": [
                  {
                    "departure": {
                      "iataCode": "SYD",
                      "terminal": "1",
                      "at": "2020-01-01T10:00:00"
                    },
                    "arrival": {
                      "iataCode": "BKK",
                      "at": "2020-01-01T15:25:00"
                    },
                    "carrierCode": "TG",
                    "number": "476",
                    "aircraft": {
                      "code": "747"
                    },
                    "operating": {
                      "carrierCode": "TG"
                    },
                    "id": "1",
                    "numberOfStops": 0,
                    "blacklistedInEU": false
                  }
                ]
              },
              {
                "duration": "PT9H20M",
                "segments": [
                  {
                    "departure": {
                      "iataCode": "BKK",
                      "at": "2020-01-05T17:50:00"
                    },
                    "arrival": {
                      "iataCode": "SYD",
                      "terminal": "1",
                      "at": "2020-01-06T07:10:00"
                    },
                    "carrierCode": "TG",
                    "number": "475",
                    "aircraft": {
                      "code": "747"
                    },
                    "operating": {
                      "carrierCode": "TG"
                    },
                    "id": "2",
                    "numberOfStops": 0,
                    "blacklistedInEU": false
                  }
                ]
              }
            ],
            "price": {
              "currency": "AUD",
              "total": "1324.86",
              "base": "1165.00",
              "fees": [
                {
                  "amount": "0.00",
                  "type": "SUPPLIER"
                },
                {
                  "amount": "0.00",
                  "type": "TICKETING"
                }
              ]
            },
            "pricingOptions": {
              "fareType": [
                "PUBLISHED"
              ],
              "includedCheckedBagsOnly": true
            },
            "validatingAirlineCodes": [
              "TG"
            ],
            "travelerPricings": [
              {
                "travelerId": "1",
                "fareOption": "STANDARD",
                "travelerType": "ADULT",
                "price": {
                  "currency": "AUD",
                  "total": "1324.86",
                  "base": "1165.00"
                },
                "fareDetailsBySegment": [
                  {
                    "segmentId": "1",
                    "cabin": "ECONOMY",
                    "fareBasis": "W1MRTG",
                    "class": "W",
                    "includedCheckedBags": {
                      "weight": 20,
                      "weightUnit": "KG"
                    }
                  },
                  {
                    "segmentId": "2",
                    "cabin": "ECONOMY",
                    "fareBasis": "W1MRTG",
                    "class": "W",
                    "includedCheckedBags": {
                      "weight": 20,
                      "weightUnit": "KG"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "dictionaries": {
          "locations": {
            "BKK": {
              "cityCode": "BKK",
              "countryCode": "TH"
            },
            "SYD": {
              "cityCode": "SYD",
              "countryCode": "AU"
            }
          },
          "aircraft": {
            "747": "BOEING 747 ALL SERIES PASSENGER"
          },
          "currencies": {
            "EUR": "EURO"
          },
          "carriers": {
            "TG": "THAI AIRWAYS INTERNATIONAL"
          }
        }
      }
    },
    "FOSE_Issue": {
      "type": "object",
      "properties": {
        "status": {
          "description": "the HTTP status code applicable to this error",
          "type": "integer"
        },
        "code": {
          "description": "an application-specific error code",
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "a short summary of the error",
          "type": "string"
        },
        "detail": {
          "description": "explanation of the error",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/FOSE_Issue_Source"
        }
      }
    },
    "FOSE_Issue_Source": {
      "type": "object",
      "title": "Issue_Source",
      "description": "an object containing references to the source of the error",
      "maxProperties": 1,
      "properties": {
        "pointer": {
          "description": "a JSON Pointer [RFC6901] to the associated entity in the request document",
          "type": "string"
        },
        "parameter": {
          "description": "a string indicating which URI query parameter caused the issue",
          "type": "string"
        },
        "example": {
          "description": "a string indicating an example of the right value",
          "type": "string"
        }
      }
    },
    "FOSE_Collection_Meta_Link": {
      "type": "object",
      "title": "Collection_Meta",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "links": {
          "$ref": "#/definitions/FOSE_CollectionLinks"
        }
      }
    },
    "FOSE_CollectionLinks": {
      "type": "object",
      "title": "CollectionLinks",
      "properties": {
        "self": {
          "type": "string",
          "format": "uri",
          "example": "https://test.api.amadeus.com/v1/area/resources?..."
        },
        "next": {
          "type": "string",
          "format": "uri",
          "example": "https://test.api.amadeus.com/v1/area/resources?..."
        },
        "previous": {
          "type": "string",
          "format": "uri",
          "example": "https://test.api.amadeus.com/v1/area/resources?..."
        },
        "last": {
          "type": "string",
          "format": "uri",
          "example": "https://test.api.amadeus.com/v1/area/resources?..."
        },
        "first": {
          "type": "string",
          "format": "uri",
          "example": "https://test.api.amadeus.com/v1/area/resources?..."
        },
        "up": {
          "type": "string",
          "format": "uri",
          "example": "https://test.api.amadeus.com/v1/area/resources?..."
        }
      },
      "example": {
        "self": "https://test.api.amadeus.com/v1/area/resources?param=value"
      }
    },
    "FOSE_FlightOffer": {
      "title": "Flight-offer",
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "the resource name",
          "example": "flight-offer"
        },
        "id": {
          "description": "Id of the flight offer",
          "type": "string",
          "example": "1"
        },
        "source": {
          "$ref": "#/definitions/FOSE_FlightOfferSource"
        },
        "sourceReference": {
          "description": "Internal reference of the offer on the source side",
          "type": "string",
          "example": "eJyLcHUyMbdwNDTVdXJ2NtU1MXIy13U0dzTU9/HQj8Ahx2Woa6gfgFMaKAuUd3QJ0TfUNyKgzkjf2c9P35iAKmN9Tz83fUM9LkMAe+4mvA==1"
        },
        "instantTicketingRequired": {
          "description": "If true, inform that a ticketing will be required at booking step",
          "type": "boolean",
          "example": false
        },
        "disablePricing": {
          "description": "BOOK step ONLY - If true, allows to book a PNR without pricing. Only for the source \"GDS\"",
          "type": "boolean",
          "example": false
        },
        "nonHomogeneous": {
          "description": "If true, upon completion of the booking, this pricing solution is expected to yield multiple records (a record contains booking information confirmed and stored, typically a Passenger Name Record (PNR), in the provider GDS or system)",
          "type": "boolean",
          "example": false
        },
        "oneWay": {
          "description": "If true, the flight offer fulfills only one originDestination and has to be combined with other oneWays to complete the whole journey.",
          "type": "boolean",
          "example": false
        },
        "paymentCardRequired": {
          "description": "If true, a payment card is mandatory to book this flight offer",
          "type": "boolean",
          "example": false
        },
        "lastTicketingDate": {
          "description": "If booked on the same day as the search (with respect to timezone), this flight offer is guaranteed to be thereafter valid for ticketing until this date (included). Unspecified when it does not make sense for this flight offer (e.g. no control over ticketing once booked). YYYY-MM-DD format, e.g. 2019-06-07",
          "type": "string",
          "example": "2018-06-19"
        },
        "lastTicketingDateTime": {
          "description": "If booked on the same day as the search (with respect to timezone), this flight offer is guaranteed to be thereafter valid for ticketing until this date/time (included). Unspecified when it does not make sense for this flight offer (e.g. no control over ticketing once booked). Local date and time in YYYY-MM-ddThh:mm:ss format, e.g. 2017-02-10T20:40:00",
          "type": "string",
          "format": "date-time",
          "example": "2018-06-19T15:00:00"
        },
        "numberOfBookableSeats": {
          "description": "Number of seats bookable in a single request. Can not be higher than 9.",
          "type": "number",
          "example": 9,
          "minimum": 1,
          "maximum": 9
        },
        "itineraries": {
          "type": "array",
          "minItems": 1,
          "maxItems": 250,
          "items": {
            "$ref": "#/definitions/FOSE_Itineraries"
          }
        },
        "price": {
          "$ref": "#/definitions/FOSE_Extended_Price"
        },
        "pricingOptions": {
          "$ref": "#/definitions/FOSE_PricingOptions"
        },
        "validatingAirlineCodes": {
          "description": "This option ensures that the system will only consider these airlines.",
          "type": "array",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "type": "string"
          },
          "example": [
            "AF"
          ]
        },
        "travelerPricings": {
          "title": "TravelerPricings",
          "description": "Fare information for each traveler/segment",
          "type": "array",
          "minItems": 1,
          "maxItems": 18,
          "items": {
            "$ref": "#/definitions/FOSE_TravelerPricing"
          }
        },
        "fareRules": {
          "description": "Fare rules of the flight offer",
          "$ref": "#/definitions/FOSE_FareRules"
        }
      }
    },
    "FOSE_FlightOfferSource": {
      "description": "source of the flight offer",
      "type": "string",
      "enum": [
        "GDS",
        "LTC",
        "PYTON",
        "EAC",
        "NDC"
      ],
      "example": "GDS"
    },
    "FOSE_Itineraries": {
      "title": "Itineraries",
      "type": "object",
      "properties": {
        "duration": {
          "description": "duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M for a duration of 2h10m",
          "type": "string",
          "example": "PT2H10M"
        },
        "segments": {
          "title": "Segments",
          "type": "array",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/definitions/FOSE_Segment"
          }
        }
      },
      "required": [
        "segments"
      ]
    },
    "FOSE_Segment": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "description": "Id of the segment",
              "type": "string",
              "example": 1
            },
            "numberOfStops": {
              "description": "Number of stops",
              "type": "integer",
              "example": 0
            },
            "blacklistedInEU": {
              "description": "When the flight has a marketing or/and operating airline that is identified as blacklisted by the European Commission. \n\nTo improve travel safety, the European Commission regularly updates the list of the banned carriers from operating in Europe. It allows any Travel Agency located in the European Union to easily identify and hide any travel recommendation based on some unsafe airlines. \nThe [list of the banned airlines](https://ec.europa.eu/transport/sites/transport/files/air-safety-list_en.pdf) is published in the Official Journal of the European Union, where they are included as annexes A and B to the Commission Regulation. The blacklist of an airline can concern all its flights or some specific aircraft types pertaining to the airline   \n",
              "type": "boolean",
              "example": false
            },
            "co2Emissions": {
              "description": "Co2 informations",
              "type": "array",
              "minItems": 1,
              "items": {
                "title": "Co2Emission",
                "$ref": "#/definitions/FOSE_Co2Emission"
              }
            }
          }
        },
        {
          "$ref": "#/definitions/FOSE_FlightSegment"
        }
      ]
    },
    "FOSE_Co2Emission": {
      "type": "object",
      "properties": {
        "weight": {
          "description": "Weight of Co2 emitted for the concerned segment",
          "type": "integer",
          "example": 90
        },
        "weightUnit": {
          "description": "Code to qualify unit as pounds or kilos",
          "type": "string",
          "example": "KG"
        },
        "cabin": {
          "$ref": "#/definitions/FOSE_TravelClass"
        }
      }
    },
    "FOSE_TravelClass": {
      "description": "quality of service offered in the cabin where the seat is located in this flight. Economy, premium economy, business or first class",
      "type": "string",
      "enum": [
        "ECONOMY",
        "PREMIUM_ECONOMY",
        "BUSINESS",
        "FIRST"
      ],
      "example": "PREMIUM_ECONOMY"
    },
    "FOSE_FlightSegment": {
      "type": "object",
      "description": "defining a flight segment; including both operating and marketing details when applicable",
      "properties": {
        "departure": {
          "$ref": "#/definitions/FOSE_FlightEndPoint"
        },
        "arrival": {
          "$ref": "#/definitions/FOSE_FlightEndPoint"
        },
        "carrierCode": {
          "type": "string",
          "description": "providing the airline / carrier code",
          "minLength": 1,
          "maxLength": 2,
          "example": "DL"
        },
        "number": {
          "type": "string",
          "description": "the flight number as assigned by the carrier",
          "minLength": 1,
          "maxLength": 4,
          "example": "212"
        },
        "aircraft": {
          "$ref": "#/definitions/FOSE_AircraftEquipment"
        },
        "operating": {
          "$ref": "#/definitions/FOSE_OperatingFlight"
        },
        "duration": {
          "type": "string",
          "description": "stop duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M",
          "example": "PT2H10M"
        },
        "stops": {
          "type": "array",
          "description": "information regarding the different stops composing the flight segment. E.g. technical stop, change of gauge...",
          "items": {
            "$ref": "#/definitions/FOSE_FlightStop"
          }
        },
        "bookingStatus": {
          "description": "booking status of the segment",
          "type": "string",
          "enum": [
            "CONFIRMED",
            "WAITLISTED",
            "CANCELLED",
            "PENDING",
            "DENIED"
          ],
          "example": "CONFIRMED"
        },
        "segmentType": {
          "description": "type of the segment",
          "type": "string",
          "enum": [
            "ACTIVE",
            "PASSIVE",
            "GHOST",
            "STAFF"
          ],
          "example": "GHOST"
        },
        "isFlown": {
          "type": "boolean",
          "description": "indicator set to true if segment is flown",
          "example": true
        }
      }
    },
    "FOSE_FlightEndPoint": {
      "title": "FlightEndPoint",
      "description": "departure or arrival information",
      "allOf": [
        {
          "$ref": "#/definitions/FOSE_OriginalFlightEndPoint"
        },
        {
          "type": "object",
          "properties": {
            "at": {
              "description": "local date and time in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss format, e.g. 2017-02-10T20:40:00",
              "type": "string",
              "format": "date-time",
              "example": "2017-10-23T20:00:00"
            }
          }
        }
      ]
    },
    "FOSE_OriginalFlightEndPoint": {
      "type": "object",
      "description": "departure or arrival information",
      "properties": {
        "iataCode": {
          "description": "[IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)",
          "type": "string",
          "example": "JFK"
        },
        "terminal": {
          "description": "terminal name / number",
          "type": "string",
          "example": "T2"
        }
      }
    },
    "FOSE_AircraftEquipment": {
      "description": "information related to the aircraft",
      "properties": {
        "code": {
          "type": "string",
          "description": "IATA aircraft code (http://www.flugzeuginfo.net/table_accodes_iata_en.php)\n",
          "pattern": "[a-zA-Z0-9]{3}",
          "example": "318"
        }
      }
    },
    "FOSE_OperatingFlight": {
      "type": "object",
      "description": "information about the operating flight",
      "properties": {
        "carrierCode": {
          "type": "string",
          "description": "providing the airline / carrier code",
          "minLength": 1,
          "maxLength": 2,
          "example": "DL"
        }
      }
    },
    "FOSE_FlightStop": {
      "title": "FlightStop",
      "description": "details of stops for direct or change of gauge flights",
      "allOf": [
        {
          "$ref": "#/definitions/FOSE_OriginalFlightStop"
        },
        {
          "type": "object",
          "properties": {
            "arrivalAt": {
              "description": "arrival at the stop in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss format, e.g. 2017-02-10T20:40:00",
              "type": "string",
              "format": "date-time",
              "example": "2017-10-23T20:00:00"
            },
            "departureAt": {
              "description": "departure from the stop in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss format, e.g. 2017-02-10T20:40:00",
              "type": "string",
              "format": "date-time",
              "example": "2017-10-23T20:00:00"
            }
          }
        }
      ]
    },
    "FOSE_OriginalFlightStop": {
      "description": "details of stops for direct or change of gauge flights",
      "type": "object",
      "properties": {
        "iataCode": {
          "description": "[IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)",
          "type": "string",
          "example": "JFK"
        },
        "duration": {
          "type": "string",
          "description": "stop duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M",
          "example": "PT2H10M"
        }
      }
    },
    "FOSE_Extended_Price": {
      "type": "object",
      "title": "Price",
      "description": "price information",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "margin": {
              "description": "BOOK step ONLY - The price margin percentage (plus or minus) that the booking can tolerate. When set to 0, then no price magin is tolerated.",
              "type": "string",
              "example": "1.00"
            },
            "grandTotal": {
              "description": "Total amount paid by the user (including fees and selected additional services).",
              "type": "string",
              "example": "987.00"
            },
            "billingCurrency": {
              "description": "Currency of the payment. It may be different than the requested currency",
              "type": "string",
              "example": "EUR"
            },
            "additionalServices": {
              "type": "array",
              "title": "AdditionalServices",
              "items": {
                "$ref": "#/definitions/FOSE_AdditionalService"
              }
            }
          }
        },
        {
          "$ref": "#/definitions/FOSE_Price"
        }
      ]
    },
    "FOSE_AdditionalService": {
      "title": "AdditionalService",
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "example": "332.70"
        },
        "type": {
          "$ref": "#/definitions/FOSE_AdditionalServiceType"
        }
      }
    },
    "FOSE_AdditionalServiceType": {
      "type": "string",
      "description": "additional service type",
      "enum": [
        "CHECKED_BAGS",
        "MEALS",
        "SEATS",
        "OTHER_SERVICES"
      ],
      "example": "CHECKED_BAGS"
    },
    "FOSE_Price": {
      "properties": {
        "currency": {
          "type": "string",
          "example": "USD"
        },
        "total": {
          "description": "Total amount paid by the user",
          "type": "string",
          "example": "932.70"
        },
        "base": {
          "description": "Amount without taxes",
          "type": "string",
          "example": "632.70"
        },
        "fees": {
          "description": "List of applicable fees",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_Fee"
          }
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_Tax"
          }
        },
        "refundableTaxes": {
          "description": "The amount of taxes which are refundable",
          "type": "string",
          "example": "200.00"
        },
        "margins": {
          "description": "List of agent margins",
          "type": "array",
          "title": "Margins",
          "items": {
            "$ref": "#/definitions/FOSE_Margin"
          }
        },
        "discounts": {
          "description": "List of agent discounts",
          "type": "array",
          "title": "PriceDiscounts",
          "items": {
            "$ref": "#/definitions/FOSE_PriceDiscount"
          }
        }
      }
    },
    "FOSE_Fee": {
      "description": "a fee",
      "properties": {
        "amount": {
          "type": "string",
          "example": "332.70"
        },
        "type": {
          "$ref": "#/definitions/FOSE_FeeType"
        }
      }
    },
    "FOSE_FeeType": {
      "type": "string",
      "description": "type of fee",
      "enum": [
        "TICKETING",
        "FORM_OF_PAYMENT",
        "SUPPLIER"
      ],
      "example": "TICKETING"
    },
    "FOSE_Tax": {
      "description": "a tax",
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "example": "332.70"
        },
        "code": {
          "type": "string",
          "example": "MX"
        }
      }
    },
    "FOSE_Margin": {
      "title": "Margin",
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "example": "10.00"
        },
        "name": {
          "description": "agent margin type",
          "type": "string",
          "enum": [
            "AGENT_MARKUP",
            "AGENT_FEE"
          ],
          "example": "AGENT_MARKUP"
        }
      }
    },
    "FOSE_PriceDiscount": {
      "title": "PriceDiscount",
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "example": "10.00"
        },
        "name": {
          "description": "agent discount type",
          "type": "string",
          "enum": [
            "AGENT_DISCOUNT"
          ],
          "example": "AGENT_DISCOUNT"
        }
      }
    },
    "FOSE_PricingOptions": {
      "title": "PricingOptions",
      "type": "object",
      "properties": {
        "fareType": {
          "description": "type of fare of the flight-offer",
          "type": "array",
          "minItems": 0,
          "maxItems": 0,
          "example": [
            "PUBLISHED"
          ],
          "items": {
            "$ref": "#/definitions/FOSE_PricingOptionsFareTypeEnum"
          }
        },
        "corporateCodes": {
          "type": "array",
          "description": "Allow Corporate negotiated fares using one or more corporate number (corporate code).",
          "items": {
            "type": "string"
          },
          "example": [
            "123456"
          ]
        },
        "includedCheckedBagsOnly": {
          "type": "boolean",
          "description": "If true, returns the flight-offers with included checked bags only",
          "example": true
        },
        "refundableFare": {
          "type": "boolean",
          "description": "If true, returns the flight-offers with refundable fares only",
          "example": true
        },
        "noRestrictionFare": {
          "type": "boolean",
          "description": "If true, returns the flight-offers with no restriction fares only",
          "example": true
        },
        "noPenaltyFare": {
          "type": "boolean",
          "description": "If true, returns the flight-offers with no penalty fares only",
          "example": true
        }
      }
    },
    "FOSE_PricingOptionsFareTypeEnum": {
      "type": "string",
      "enum": [
        "PUBLISHED",
        "NEGOTIATED",
        "CORPORATE"
      ]
    },
    "FOSE_TravelerPricing": {
      "title": "TravelerPricing",
      "required": [
        "travelerId",
        "fareOption",
        "travelerType",
        "fareDetailsBySegment"
      ],
      "properties": {
        "travelerId": {
          "type": "string",
          "example": "1",
          "description": "Id of the traveler"
        },
        "fareOption": {
          "$ref": "#/definitions/FOSE_TravelerPricingFareOption"
        },
        "travelerType": {
          "$ref": "#/definitions/FOSE_TravelerType"
        },
        "associatedAdultId": {
          "type": "string",
          "description": "if type=\"HELD_INFANT\", corresponds to the adult traveler's id who will share the seat"
        },
        "price": {
          "description": "price detail of the traveler",
          "$ref": "#/definitions/FOSE_Price"
        },
        "fareDetailsBySegment": {
          "type": "array",
          "minItems": 1,
          "maxItems": 18,
          "items": {
            "$ref": "#/definitions/FOSE_FareDetailsBySegment"
          }
        }
      }
    },
    "FOSE_TravelerPricingFareOption": {
      "description": "option specifying a group of fares, which may be valid under certain conditons\nCan be used to specify special fare discount for a passenger\n",
      "type": "string",
      "enum": [
        "STANDARD",
        "INCLUSIVE_TOUR",
        "SPANISH_MELILLA_RESIDENT",
        "SPANISH_CEUTA_RESIDENT",
        "SPANISH_CANARY_RESIDENT",
        "SPANISH_BALEARIC_RESIDENT",
        "AIR_FRANCE_METROPOLITAN_DISCOUNT_PASS",
        "AIR_FRANCE_DOM_DISCOUNT_PASS",
        "AIR_FRANCE_COMBINED_DISCOUNT_PASS",
        "AIR_FRANCE_FAMILY",
        "ADULT_WITH_COMPANION",
        "COMPANION"
      ],
      "example": "STANDARD"
    },
    "FOSE_TravelerType": {
      "type": "string",
      "description": "traveler type\nage restrictions : CHILD < 12y, HELD_INFANT < 2y, SEATED_INFANT < 2y, SENIOR >=60y\n",
      "enum": [
        "ADULT",
        "CHILD",
        "SENIOR",
        "YOUNG",
        "HELD_INFANT",
        "SEATED_INFANT",
        "STUDENT"
      ],
      "example": "ADULT"
    },
    "FOSE_FareDetailsBySegment": {
      "title": "FareDetailsBySegment",
      "description": "Fare details of the segment",
      "required": [
        "segmentId"
      ],
      "properties": {
        "segmentId": {
          "type": "string",
          "example": "1",
          "description": "Id of the segment"
        },
        "cabin": {
          "$ref": "#/definitions/FOSE_TravelClass"
        },
        "fareBasis": {
          "description": "Fare basis specifying the rules of a fare. Usually, though not always, is composed of the booking class code followed by a set of letters and digits representing other characteristics of the ticket, such as refundability, minimum stay requirements, discounts or special promotional elements.",
          "type": "string",
          "example": "ANNNNF4K",
          "pattern": "[[A-Z0-9]{1,18}"
        },
        "brandedFare": {
          "description": "The code of the Fare Family corresponding to the fares. Only for the GDS and NDC providers and if the airline has fare families filled",
          "type": "string",
          "example": "LIGHT"
        },
        "brandedFareLabel": {
          "description": "The name of the Fare Family. Only for the GDS and NDC providers and if the airline has fare families filled",
          "type": "string",
          "example": "Premium Economy"
        },
        "class": {
          "description": "The code of the booking class, a.k.a. class of service or Reservations/Booking Designator (RBD)",
          "type": "string",
          "example": "A",
          "pattern": "[A-Z]{1}"
        },
        "isAllotment": {
          "description": "True if the corresponding booking class is in an allotment",
          "type": "boolean",
          "example": true
        },
        "allotmentDetails": {
          "$ref": "#/definitions/FOSE_AllotmentDetails"
        },
        "sliceDiceIndicator": {
          "$ref": "#/definitions/FOSE_SliceDiceIndicator"
        },
        "includedCheckedBags": {
          "title": "includedCheckedBags",
          "$ref": "#/definitions/FOSE_BaggageAllowance",
          "description": "Details of the included checked bags"
        },
        "includedCabinBags": {
          "$ref": "#/definitions/FOSE_BaggageAllowance",
          "description": "Details of the included cabin bags"
        },
        "mealServices": {
          "type": "array",
          "description": "meal services proposed for the booked segment, there can be several, for example D DINNER + B BREAKFAST",
          "items": {
            "$ref": "#/definitions/FOSE_MealServices"
          }
        },
        "additionalServices": {
          "$ref": "#/definitions/FOSE_AdditionalServicesRequest"
        },
        "amenities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_Amenity"
          }
        }
      }
    },
    "FOSE_AllotmentDetails": {
      "title": "AllotmentDetails",
      "type": "object",
      "properties": {
        "tourName": {
          "description": "The tour name agreed for this specific allotment.",
          "type": "string"
        },
        "tourReference": {
          "description": "The tour reference agreed for this specific allotment.",
          "type": "string"
        }
      }
    },
    "FOSE_SliceDiceIndicator": {
      "description": "slice and Dice indicator, such as Local Availability, Sub OnD(Origin and Destination) 1 Availability and Sub OnD 2 Availability",
      "type": "string",
      "enum": [
        "LOCAL_AVAILABILITY",
        "SUB_OD_AVAILABILITY_1",
        "SUB_OD_AVAILABILITY_2"
      ]
    },
    "FOSE_BaggageAllowance": {
      "description": "baggageAllowance",
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "description": "Total number of units",
          "example": 1
        },
        "weight": {
          "type": "integer",
          "description": "Weight of the baggage allowance",
          "example": 20
        },
        "weightUnit": {
          "type": "string",
          "description": "Code to qualify unit as pounds or kilos",
          "example": "KG"
        }
      }
    },
    "FOSE_MealServices": {
      "title": "MealServices",
      "properties": {
        "label": {
          "type": "string",
          "example": "DINNER",
          "description": "meal label"
        }
      }
    },
    "FOSE_AdditionalServicesRequest": {
      "type": "object",
      "title": "AdditionalServicesRequest",
      "properties": {
        "chargeableCheckedBags": {
          "title": "chargeableCheckedBags",
          "description": "Details of chargeable checked bags",
          "$ref": "#/definitions/FOSE_ChargeableCheckdBags"
        },
        "chargeableSeat": {
          "title": "chargeableSeat",
          "description": "Details of chargeable seat",
          "$ref": "#/definitions/FOSE_ChargeableSeat"
        },
        "chargeableSeatNumber": {
          "type": "string",
          "description": "DEPRECATED - use the chargeableSeat attribute -  seat number",
          "example": "33D",
          "pattern": "[1-9][0-9]{0,2}[A-Z]?"
        },
        "otherServices": {
          "type": "array",
          "description": "Other services to add",
          "items": {
            "$ref": "#/definitions/FOSE_ServiceName"
          },
          "example": [
            "PRIORITY_BOARDING"
          ]
        }
      }
    },
    "FOSE_ChargeableCheckdBags": {
      "description": "Details of chargeable checked bags",
      "allOf": [
        {
          "$ref": "#/definitions/FOSE_BaggageAllowance"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "description": "Id of the chargeable bag",
              "type": "string",
              "example": "1"
            }
          }
        }
      ]
    },
    "FOSE_ChargeableSeat": {
      "description": "Details of chargeable seat",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the chargeable seat",
          "type": "string",
          "example": "1"
        },
        "number": {
          "type": "string",
          "description": "seat number",
          "example": "33D",
          "pattern": "[1-9][0-9]{0,2}[A-Z]?"
        }
      }
    },
    "FOSE_ServiceName": {
      "description": "type of service",
      "type": "string",
      "enum": [
        "PRIORITY_BOARDING",
        "AIRPORT_CHECKIN"
      ],
      "example": "PRIORITY_BOARDING"
    },
    "FOSE_Amenity": {
      "type": "object",
      "description": "Amenity",
      "title": "Amenity",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isChargeable": {
          "type": "boolean"
        },
        "amenityType": {
          "$ref": "#/definitions/FOSE_AmenityType"
        },
        "amenityProvider": {
          "$ref": "#/definitions/FOSE_AmenityProvider"
        },
        "amenitySeat": {
          "$ref": "#/definitions/FOSE_AmenitySeat"
        }
      }
    },
    "FOSE_AmenityType": {
      "description": "Amenity type",
      "type": "string",
      "enum": [
        "BUNDLED_SERVICE",
        "BRANDED_FARES",
        "BAGGAGE",
        "CARBON_OFFSET",
        "FREQUENT_FLYER",
        "GROUND",
        "ENTERTAINMENT",
        "LOUNGE",
        "MEDICAL",
        "MEAL",
        "PETS",
        "RULE_OVERRIDE",
        "STANDBY",
        "STORE",
        "TRAVEL_SERVICES",
        "UNACCOMPANIED_TRAVEL",
        "UPGRADES",
        "UNACCOMPANIED_TRAVEL_UNESCORTED",
        "PRE_RESERVED_SEAT",
        "WIFI",
        "BEVERAGE",
        "POWER",
        "SEAT",
        "LAYOUT"
      ]
    },
    "FOSE_AmenityProvider": {
      "title": "AmenityProvider",
      "type": "object",
      "description": "Provides more information on the Source of the Amenity Content",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the source of the Amenity Content",
          "example": "ATPCO RouteHappy"
        }
      }
    },
    "FOSE_AmenitySeat": {
      "title": "AmenitySeat",
      "type": "object",
      "description": "Characteristics for a group of seat, such as Distance from one seat to another, only provided when amenityType=SEAT",
      "properties": {
        "legSpace": {
          "description": "Space between 2 seats",
          "type": "integer",
          "example": 33
        },
        "spaceUnit": {
          "type": "string",
          "enum": [
            "INCHES",
            "CENTIMETERS",
            "METERS"
          ]
        },
        "tilt": {
          "description": "Flatness of a seat",
          "type": "string",
          "enum": [
            "FULL_FLAT",
            "ANGLE_FLAT",
            "NORMAL"
          ]
        }
      }
    },
    "FOSE_FareRules": {
      "type": "object",
      "title": "FareRules",
      "properties": {
        "currency": {
          "type": "string",
          "description": "The currency of the penalties"
        },
        "rules": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/FOSE_Extended_TermAndCondition"
          }
        }
      }
    },
    "FOSE_Extended_TermAndCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/FOSE_TermAndCondition"
        },
        {
          "type": "object",
          "properties": {
            "isChargeable": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "FOSE_TermAndCondition": {
      "properties": {
        "category": {
          "type": "string",
          "description": "This defines what type of modification is concerned in this rule.",
          "enum": [
            "REFUND",
            "EXCHANGE",
            "REVALIDATION",
            "REISSUE",
            "REBOOK",
            "CANCELLATION"
          ],
          "example": "EXCHANGE"
        },
        "circumstances": {
          "type": "string"
        },
        "notApplicable": {
          "type": "boolean"
        },
        "maxPenaltyAmount": {
          "type": "string"
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_Description"
          }
        }
      }
    },
    "FOSE_Description": {
      "title": "Description",
      "properties": {
        "descriptionType": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "FOSE_Dictionaries": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_LocationEntry"
          }
        },
        "aircraft": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_AircraftEntry"
          }
        },
        "currencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_CurrencyEntry"
          }
        },
        "carriers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_CarrierEntry"
          }
        }
      }
    },
    "FOSE_LocationEntry": {
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "additionalProperties": {
          "$ref": "#/definitions/FOSE_LocationValue"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/FOSE_LocationValue"
      }
    },
    "FOSE_LocationValue": {
      "properties": {
        "cityCode": {
          "type": "string",
          "description": "City code associated to the airport",
          "example": "PAR"
        },
        "countryCode": {
          "type": "string",
          "description": "Country code of the airport",
          "example": "FR"
        }
      }
    },
    "FOSE_AircraftEntry": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "additionalProperties": {
          "description": "the manufacturer/model of aircraft",
          "type": "string"
        }
      },
      "additionalProperties": {
        "description": "the manufacturer/model of aircraft",
        "type": "string"
      }
    },
    "FOSE_CurrencyEntry": {
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "type": "string",
          "example": "Euro"
        },
        "additionalProperties": {
          "type": "string",
          "example": "EUR"
        }
      },
      "additionalProperties": {
        "type": "string",
        "example": "EUR"
      }
    },
    "FOSE_CarrierEntry": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "additionalProperties": {
          "description": "the carrier name",
          "type": "string"
        }
      },
      "additionalProperties": {
        "description": "the carrier name",
        "type": "string"
      }
    },
    "FOSE_Error_400": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_Issue"
          }
        }
      },
      "required": [
        "errors"
      ],
      "example": {
        "errors": [
          {
            "status": 400,
            "code": 477,
            "title": "INVALID FORMAT",
            "detail": "invalid query parameter format",
            "source": {
              "parameter": "airport",
              "example": "CDG"
            }
          }
        ]
      }
    },
    "FOSE_Error_500": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOSE_Issue"
          }
        }
      },
      "required": [
        "errors"
      ],
      "example": {
        "errors": [
          {
            "status": 500,
            "code": 141,
            "title": "SYSTEM ERROR HAS OCCURRED"
          }
        ]
      }
    },
    "FOSE_GetFlightOffersQuery_Input": {
      "title": "getFlightOffersQuery",
      "required": [
        "originDestinations",
        "travelers",
        "sources"
      ],
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "The currency code, as defined in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217), to reflect the currency in which this amount is expressed.",
          "example": "EUR"
        },
        "originDestinations": {
          "title": "originDestinations",
          "description": "Origins and Destinations must be properly ordered in time (chronological order in accordance with the timezone of each location) to describe the journey consistently. Dates and times must not be past nor more than 365 days in the future, according to provider settings.Number of Origins and Destinations must not exceed the limit defined in provider settings.",
          "type": "array",
          "minItems": 1,
          "maxItems": 6,
          "items": {
            "$ref": "#/definitions/FOSE_OriginDestination_Input"
          }
        },
        "travelers": {
          "title": "travelers",
          "description": "travelers in the trip.\nMaximum number of passengers older than 2 yo (CHILD, ADULT, YOUNG, SENIOR, STUDENT): 9.\nEach adult can travel with one INFANT so maximum total number of passengers: 18\n",
          "type": "array",
          "minItems": 1,
          "maxItems": 18,
          "items": {
            "$ref": "#/definitions/FOSE_Extended_TravelerInfo_Input"
          }
        },
        "sources": {
          "title": "sources",
          "description": "Allows enable one or more sources. If present in the list, these sources will be called by the system. \nGDS : Full service carriers,\nEAC : Extended Air choice,\nLTC : Light Ticketing,\nPYTON : Direct connection Pyton\nNDC : NDC content\n",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/FOSE_FlightOfferSource"
          },
          "example": [
            "GDS",
            "LTC",
            "PYTON",
            "EAC",
            "NDC"
          ]
        },
        "searchCriteria": {
          "$ref": "#/definitions/FOSE_SearchCriteria_Input"
        }
      },
      "example": {
        "currencyCode": "USD",
        "originDestinations": [
          {
            "id": "1",
            "originLocationCode": "RIO",
            "destinationLocationCode": "MAD",
            "departureDateTimeRange": {
              "date": "2020-03-01",
              "time": "10:00:00"
            }
          },
          {
            "id": "2",
            "originLocationCode": "MAD",
            "destinationLocationCode": "RIO",
            "departureDateTimeRange": {
              "date": "2020-03-05",
              "time": "17:00:00"
            }
          }
        ],
        "travelers": [
          {
            "id": "1",
            "travelerType": "ADULT",
            "fareOptions": [
              "STANDARD"
            ]
          },
          {
            "id": "2",
            "travelerType": "CHILD",
            "fareOptions": [
              "STANDARD"
            ]
          }
        ],
        "sources": [
          "GDS"
        ],
        "searchCriteria": {
          "maxFlightOffers": 50,
          "flightFilters": {
            "cabinRestrictions": [
              {
                "cabin": "BUSINESS",
                "coverage": "MOST_SEGMENTS",
                "originDestinationIds": [
                  "1"
                ]
              }
            ],
            "carrierRestrictions": {
              "excludedCarrierCodes": [
                "AA",
                "TP",
                "AZ"
              ]
            }
          }
        }
      }
    },
    "FOSE_OriginDestination_Input": {
      "allOf": [
        {
          "$ref": "#/definitions/FOSE_OriginDestinationLight_Input"
        },
        {
          "type": "object",
          "properties": {
            "originRadius": {
              "description": "Include other possible locations around the point, located less than this distance in kilometers away. Max:300\n\nCan not be combined with \"dateWindow\" or \"timeWindow\".\n",
              "type": "number",
              "example": 200
            },
            "alternativeOriginsCodes": {
              "type": "array",
              "description": "Set of alternative origin location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.",
              "minItems": 1,
              "maxItems": 2,
              "items": {
                "title": "code",
                "type": "string"
              },
              "example": [
                "LON",
                "MUC"
              ]
            },
            "destinationRadius": {
              "description": "Include other possible locations around the point, located less than this distance in kilometers away. Max:300\n\nCan not be combined with \"dateWindow\" or \"timeWindow\".\n",
              "type": "number",
              "example": 200
            },
            "alternativeDestinationsCodes": {
              "type": "array",
              "description": "Set of alternative destination location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.",
              "minItems": 1,
              "maxItems": 2,
              "items": {
                "title": "code",
                "type": "string"
              }
            },
            "departureDateTimeRange": {
              "description": "Approximate date and time of departure, specified as a local date and time range.",
              "$ref": "#/definitions/FOSE_DateTimeRange_Input"
            },
            "arrivalDateTimeRange": {
              "description": "Approximate date and time of arrival, specified as a local date and time range.",
              "$ref": "#/definitions/FOSE_DateTimeRange_Input"
            }
          }
        }
      ]
    },
    "FOSE_OriginDestinationLight_Input": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": 1
        },
        "originLocationCode": {
          "description": "Origin location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.",
          "type": "string",
          "example": "PAR"
        },
        "destinationLocationCode": {
          "description": "Destination location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.",
          "type": "string",
          "example": "NYC"
        },
        "includedConnectionPoints": {
          "type": "array",
          "description": "List of included connections points. When an includedViaPoints option is specified, all FlightOffer returned must at least go via this Connecting Point. Currently, only the locations defined in IATA are supported. Used only by the AMADEUS provider",
          "minItems": 1,
          "maxItems": 2,
          "items": {
            "title": "code",
            "type": "string"
          },
          "example": [
            "MRS"
          ]
        },
        "excludedConnectionPoints": {
          "type": "array",
          "description": "List of excluded connections points. Any FlightOffer with these connections points will be present in response. Currently, only the locations defined in IATA are supported. Used only by the AMADEUS provider",
          "minItems": 1,
          "maxItems": 3,
          "items": {
            "title": "code",
            "type": "string"
          },
          "example": [
            "MRS"
          ]
        }
      }
    },
    "FOSE_DateTimeRange_Input": {
      "title": "dateTimeRange",
      "allOf": [
        {
          "$ref": "#/definitions/FOSE_DateTimeType_Input"
        },
        {
          "type": "object",
          "properties": {
            "dateWindow": {
              "description": "Either 1, 2 or 3 extra days around the local date (IxD for +/- x days - Ex: I3D), Either 1 to 3 days after the local date (PxD for +x days - Ex: P3D), or 1 to 3 days before the local date (MxD for -x days - Ex: M3D)\n\nCan not be combined with \"originRadius\" or \"destinationRadius\".\n",
              "type": "string",
              "example": "I3D",
              "pattern": "^[MPI][1-3]D"
            },
            "timeWindow": {
              "description": "1 to 12 hours around (both +and -) the local time. Possibly limited by the number of extra days when specified, i.e.  in some situations, it may not be used to exceed the maximum date range. [1-12]H format, e.g. 6H\n\nCan not be combined with \"originRadius\" or \"destinationRadius\".\n",
              "type": "string",
              "example": "2H",
              "pattern": "^([1-9]|10|11|12)H"
            }
          }
        }
      ],
      "required": [
        "date"
      ]
    },
    "FOSE_DateTimeType_Input": {
      "type": "object",
      "properties": {
        "date": {
          "description": "Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2018-12-25",
          "type": "string",
          "format": "date",
          "example": "2018-09-22"
        },
        "time": {
          "description": "Local time. hh:mm:ss format, e.g 10:30:00",
          "type": "string",
          "example": "10:30:00"
        }
      },
      "required": [
        "date"
      ]
    },
    "FOSE_Extended_TravelerInfo_Input": {
      "allOf": [
        {
          "$ref": "#/definitions/FOSE_TravelerInfo_Input"
        },
        {
          "type": "object",
          "properties": {
            "fareOptions": {
              "type": "array",
              "description": "option specifying a group of fares, which may be valid under certain conditons\ncan be used to specify special fare discount for a passenger\n",
              "minItems": 1,
              "maxItems": 3,
              "example": [
                "STANDARD",
                "INCLUSIVE_TOUR"
              ],
              "items": {
                "$ref": "#/definitions/FOSE_FareOptionsEnum_Input"
              }
            }
          }
        }
      ],
      "required": [
        "id",
        "travelerType"
      ]
    },
    "FOSE_TravelerInfo_Input": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": 1
        },
        "travelerType": {
          "$ref": "#/definitions/FOSE_TravelerType"
        },
        "associatedAdultId": {
          "type": "string",
          "description": "if type=\"HELD_INFANT\", corresponds to the adult travelers's id who will share the seat"
        }
      },
      "required": [
        "id",
        "travelerType"
      ]
    },
    "FOSE_FareOptionsEnum_Input": {
      "type": "string",
      "enum": [
        "STANDARD",
        "INCLUSIVE_TOUR",
        "SPANISH_MELILLA_RESIDENT",
        "SPANISH_CEUTA_RESIDENT",
        "SPANISH_CANARY_RESIDENT",
        "SPANISH_BALEARIC_RESIDENT",
        "AIR_FRANCE_METROPOLITAN_DISCOUNT_PASS",
        "AIR_FRANCE_DOM_DISCOUNT_PASS",
        "AIR_FRANCE_COMBINED_DISCOUNT_PASS",
        "AIR_FRANCE_FAMILY",
        "ADULT_WITH_COMPANION",
        "COMPANION"
      ]
    },
    "FOSE_SearchCriteria_Input": {
      "type": "object",
      "properties": {
        "excludeAllotments": {
          "description": "This option allows to exclude the isAllotment flag associated to a booking class in the search response when it exist.",
          "type": "boolean",
          "example": false
        },
        "addOneWayOffers": {
          "description": "This option allows activate the one-way combinable feature",
          "type": "boolean",
          "example": true
        },
        "maxFlightOffers": {
          "description": "Maximum number of flight offers returned (Max 250)",
          "type": "number",
          "default": 250,
          "example": 250
        },
        "maxPrice": {
          "description": "maximum price per traveler. By default, no limit is applied. If specified, the value should be a positive number with no decimals",
          "type": "integer",
          "example": 100
        },
        "allowAlternativeFareOptions": {
          "description": "This option allows to default to a standard fareOption if no offers are found for the selected fareOption.",
          "type": "boolean",
          "example": true
        },
        "oneFlightOfferPerDay": {
          "description": "Requests the system to find at least one flight-offer per day, if possible, when a range of dates is specified. Default is false.",
          "type": "boolean",
          "example": true
        },
        "additionalInformation": {
          "$ref": "#/definitions/FOSE_AdditionalInformation_Input"
        },
        "pricingOptions": {
          "$ref": "#/definitions/FOSE_Extended_PricingOptions_Input"
        },
        "flightFilters": {
          "title": "FlightFilters",
          "$ref": "#/definitions/FOSE_FlightFilters_Input"
        }
      }
    },
    "FOSE_AdditionalInformation_Input": {
      "title": "AdditionalInformation",
      "type": "object",
      "properties": {
        "chargeableCheckedBags": {
          "description": "If true, returns the price of the first additional bag when the airline is an \"Amadeus Ancillary Services\" member.",
          "type": "boolean",
          "example": true
        },
        "brandedFares": {
          "description": "If true, returns the fare family name for each flight-offer which supports fare family",
          "type": "boolean",
          "example": true
        },
        "fareRules": {
          "description": "If true, returns the fare rules before departure for each flight-offer when they are available",
          "type": "boolean",
          "example": true
        }
      }
    },
    "FOSE_Extended_PricingOptions_Input": {
      "title": "pricingOptions",
      "description": "fare filter options",
      "type": "object",
      "properties": {
        "minimumDelayBeforeTicketing": {
          "description": "Required delay before being able to ticket. This option ensures that the system will only search for flight-offers which can still be ticketed the last day after this delay. If booked on the same day as the search (with respect to provider timezone), such flight-offers are guaranteed to be thereafter valid for ticketing at least during this delay (last day included). This option has no effect on flight-offers for which the last ticketing date does not make sense. Overrides the default settings. Max 365D",
          "type": "string",
          "example": "3D"
        },
        "fareType": {
          "type": "array",
          "description": "type of fare of the flight-offer",
          "minItems": 0,
          "maxItems": 0,
          "example": [
            "PUBLISHED"
          ],
          "items": {
            "$ref": "#/definitions/FOSE_PricingOptionsFareTypeEnum"
          }
        },
        "corporateCodes": {
          "type": "array",
          "minItems": 1,
          "maxItems": 6,
          "description": "Allow Corporate negotiated fares using one or more corporate number (corporate code).",
          "items": {
            "type": "string"
          },
          "example": [
            "123456"
          ],
          "pattern": "[0-9A-Z]{6}"
        },
        "includedCheckedBagsOnly": {
          "type": "boolean",
          "description": "If true, returns the flight-offers with included checked bags only",
          "example": true
        },
        "refundableFare": {
          "type": "boolean",
          "description": "If true, returns the flight-offers with refundable fares only",
          "example": true
        },
        "noRestrictionFare": {
          "type": "boolean",
          "description": "If true, returns the flight-offers with no restriction fares only",
          "example": true
        },
        "noPenaltyFare": {
          "type": "boolean",
          "description": "If true, returns the flight-offers with no penalty fares only",
          "example": true
        }
      }
    },
    "FOSE_FlightFilters_Input": {
      "type": "object",
      "properties": {
        "crossBorderAllowed": {
          "description": "Allows to search a location outside the borders when a radius around a location is specified. Default is false.",
          "type": "boolean",
          "example": false
        },
        "moreOvernightsAllowed": {
          "description": "This flag enables/disables the possibility to have more overnight flights in Low Fare Search",
          "type": "boolean",
          "example": false
        },
        "returnToDepartureAirport": {
          "description": "This option force to retrieve flight-offer with a departure and a return in the same airport",
          "type": "boolean",
          "example": false
        },
        "railSegmentAllowed": {
          "description": "This flag enable/disable filtering of rail segment (TGV AIR, RAIL ...)",
          "type": "boolean",
          "example": true
        },
        "busSegmentAllowed": {
          "description": "This flag enable/disable filtering of bus segment",
          "type": "boolean",
          "example": true
        },
        "maxFlightTime": {
          "description": "This option allows to define a maximum flying time in relation with the shortest solution. For example, a value of 120 will cause the search to return solutions that are at most 20% longer than the shortest one",
          "type": "number",
          "example": 200
        },
        "carrierRestrictions": {
          "title": "CarrierRestrictions",
          "description": "Restriction towards carriers.",
          "$ref": "#/definitions/FOSE_CarrierRestrictions_Input"
        },
        "cabinRestrictions": {
          "title": "CabinRestrictions",
          "description": "Restriction towards cabins.",
          "type": "array",
          "minItems": 1,
          "maxItems": 6,
          "items": {
            "$ref": "#/definitions/FOSE_Extended_CabinRestriction_Input"
          }
        },
        "connectionRestriction": {
          "title": "ConnectionRestriction",
          "description": "Restriction towards number of connections.",
          "$ref": "#/definitions/FOSE_ConnectionRestriction_Input"
        }
      }
    },
    "FOSE_CarrierRestrictions_Input": {
      "description": "Restriction towards carriers.",
      "type": "object",
      "properties": {
        "blacklistedInEUAllowed": {
          "description": "This flag enable/disable filtering of blacklisted airline by EU. The list of the banned airlines is published in the Official Journal of the European Union, where they are included as annexes A and B to the Commission Regulation. The blacklist of an airline can concern all its flights or some specific aircraft types pertaining to the airline",
          "type": "boolean"
        },
        "excludedCarrierCodes": {
          "description": "This option ensures that the system will only consider these airlines.",
          "type": "array",
          "minItems": 1,
          "maxItems": 99,
          "items": {
            "type": "string"
          }
        },
        "includedCarrierCodes": {
          "description": "This option ensures that the system will only consider these airlines.",
          "type": "array",
          "minItems": 1,
          "maxItems": 99,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FOSE_Extended_CabinRestriction_Input": {
      "allOf": [
        {
          "$ref": "#/definitions/FOSE_CabinRestriction_Input"
        },
        {
          "type": "object",
          "properties": {
            "coverage": {
              "$ref": "#/definitions/FOSE_Coverage_Input"
            }
          }
        }
      ]
    },
    "FOSE_CabinRestriction_Input": {
      "title": "CabinRestriction",
      "type": "object",
      "properties": {
        "cabin": {
          "$ref": "#/definitions/FOSE_TravelClass"
        },
        "originDestinationIds": {
          "title": "originDestinationIds",
          "description": "The list of originDestination identifiers for which the cabinRestriction applies",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            1,
            2
          ]
        }
      }
    },
    "FOSE_Coverage_Input": {
      "description": "part of the trip covered by the travel class restriction (ALL_SEGMENTS if ommited)",
      "type": "string",
      "enum": [
        "MOST_SEGMENTS",
        "AT_LEAST_ONE_SEGMENT",
        "ALL_SEGMENTS"
      ],
      "example": "MOST_SEGMENTS"
    },
    "FOSE_ConnectionRestriction_Input": {
      "description": "Restriction towards number of connections.",
      "type": "object",
      "properties": {
        "maxNumberOfConnections": {
          "description": "The maximal number of connections for each itinerary. Value can be 0, 1 or 2.",
          "type": "number",
          "example": 2
        },
        "nonStopPreferred": {
          "description": "When this option is requested, recommendations made of Non-Stop flights only are favoured by the search, on the whole itinerary, with a weight of 75%. It is possible to override this default 75% weight of Non-Stop recommendations by providing the requested weight in the attribute nonStopPreferredWeight",
          "type": "boolean",
          "example": false
        },
        "nonStopPreferredWeight": {
          "description": "This weight is the percentage of total number of recommendations that could be returned for Non-Stop flight recommendations. It is only relevant when combined with nonSTopPreferred set to true. If not specified, the default weight of 75% is applied",
          "type": "number",
          "example": 50
        },
        "airportChangeAllowed": {
          "description": "Allow to change airport during connection",
          "type": "boolean",
          "example": false
        },
        "technicalStopsAllowed": {
          "description": "This option allows the single segment to have one or more intermediate stops (technical stops).",
          "type": "boolean",
          "example": true
        }
      }
    }
  },
  "responses": {
    "FOSE_returnAirOffers": {
      "description": "Successful Operation",
      "schema": {
        "$ref": "#/definitions/FOSE_Success"
      }
    },
    "FOSE_400_Search": {
      "description": "code    | title                                 \n------- | ------------------------------------- \n425     | INVALID DATE\n477     | INVALID FORMAT\n572     | INVALID OPTION\n2668    | PARAMETER COMBINATION INVALID/RESTRICTED\n2781    | INVALID LENGTH\n4926    | INVALID DATA RECEIVED\n9880    | SELECTED DATE IS TOO FAR IN THE FUTURE\n10661   | MAXIMUM NUMBER OF OCCURRENCES EXCEEDED \n32171   | MANDATORY DATA MISSING\n",
      "schema": {
        "$ref": "#/definitions/FOSE_Error_400"
      }
    },
    "FOSE_500": {
      "description": "Unexpected error",
      "schema": {
        "$ref": "#/definitions/FOSE_Error_500"
      }
    },
    "FOGE_GETAirOffersReply": {
      "description": "Successful Operation",
      "schema": {
        "$ref": "#/definitions/FOGE_Success"
      }
    }
  },
  "parameters": {
    "FOSE_getOverride_Input": {
      "name": "X-HTTP-Method-Override",
      "description": "the HTTP method to apply",
      "required": true,
      "in": "header",
      "type": "string",
      "default": "GET"
    }
  },
  "x-generatedAt": "2023-11-21T10:57:34.303Z"
}
